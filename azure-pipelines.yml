# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '69eb6d23-15c3-491e-8867-6c8bce67bf00'
  imageRepository: 'sqlappdocker'
  containerRegistry: 'localregistry0001.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/sqlapp/sqlapp'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    container: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'
        
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: false
    
    - publish: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Publish build'
      artifact: buildartifacts

- stage: Deploy
  displayName: Push stage
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    
    steps:
    - download: current
      artifact: buildartifacts

    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        buildContext: '$(Pipeline.Workspace)/buildartifacts/sqlapp/sqlapp'
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    